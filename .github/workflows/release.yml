name: Release
concurrency: build

on:
  push:
    tags:
      - "*"

jobs:
  build_test:
    runs-on: ubuntu-latest
    steps:
      - name: Prepare - Checkout
        uses: actions/checkout@v3.1.0

      - name: Prepare - Inject short Variables
        uses: rlespinasse/github-slug-action@v4.3.2

      - name: Prepare - Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0

      - name: Prepare - Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.2.1

      - name: Build - BUILD
        uses: docker/build-push-action@v4.0.0
        with:
          load: true
          build-args: "NOTIFO__BUILD__VERSION=${{ env.GITHUB_REF_SLUG }},NOTIFO__RUNTIME__VERSION=${{ env.GITHUB_REF_SLUG }}"
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: notifo-local

      - name: Test - Inject Google Credentials
        run: mkdir secrets && echo "$GOOGLE__KEYFILE" >| secrets/keyfile.json
        working-directory: tools/TestSuite
        env:
          GOOGLE__KEYFILE: ${{ secrets.GOOGLE__KEYFILE }}

      - name: Test - Start Compose
        run: docker-compose up -d
        working-directory: tools/TestSuite

      - name: Test - RUN
        uses: kohlerdominik/docker-run-action@v1.1.0
        with:
          image: mcr.microsoft.com/dotnet/sdk:7.0
          environment: |
            MAILCATCHER__HOST__SMTP=mailcatcher
            MESSAGEBIRD__ACCESSKEY=${{ secrets.MESSAGEBIRD__ACCESSKEY }}
            CONFIG__WAIT=60
            CONFIG__SERVER__URL=http://localhost:8080
            WEBHOOKCATCHER__HOST__ENDPOINT=webhookcatcher
          default_network: host
          options: --name test1
          volumes: ${{ github.workspace }}:/src
          run: dotnet test /src/tools/TestSuite/TestSuite.ApiTests/TestSuite.ApiTests.csproj --filter Category!=NotAutomated

      - name: Test - RUN on GooglePubSub
        uses: kohlerdominik/docker-run-action@v1.1.0
        with:
          image: mcr.microsoft.com/dotnet/sdk:7.0
          environment: |
            MAILCATCHER__HOST__SMTP=mailcatcher
            MESSAGEBIRD__ACCESSKEY=${{ secrets.MESSAGEBIRD__ACCESSKEY }}
            CONFIG__WAIT=60
            CONFIG__SERVER__URL=http://localhost:8081
            WEBHOOKCATCHER__HOST__ENDPOINT=webhookcatcher
          default_network: host
          options: --name test2
          volumes: ${{ github.workspace }}:/src
          run: dotnet test /src/tools/TestSuite/TestSuite.ApiTests/TestSuite.ApiTests.csproj --filter Category!=NotAutomated
       
      - name: Test - Dump docker logs on failure
        if: failure()
        uses: jwalton/gh-docker-logs@v2.2.1
        with:
         images: 'notifo-local,squidex/resizer'
         tail: '100'

      - name: Test - Cleanup
        if: always()
        run: docker-compose down
        working-directory: tools/TestSuite

      - name: Publish - Get Major Version
        id: version
        uses: rishabhgupta/split-by@v1
        with:
          string: "${{ env.GITHUB_REF_SLUG }}"
          split-by: "."

      - name: Publish - Check Tag
        id: normal-version
        run: |
          if [[ ${{ env.GITHUB_REF_SLUG }} =~ ^[0-9]+\.[0-9]+$ ]]; then
              echo "STABLE_VERSION=true" >> $GITHUB_ENV
          fi

      - name: Publish - Login to Docker Hub
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Publish - Rename Tags
        run: |
          docker tag notifo-local squidex/notifo:latest
          docker tag notifo-local squidex/notifo:${{ env.GITHUB_REF_SLUG }}
          docker tag notifo-local squidex/notifo:${{ steps.version.outputs._0 }}
    
      - name: Publish - Push Tags
        if: env.STABLE_VERSION == 'true'
        run: |
          docker tag notifo-local squidex/notifo:latest
          docker tag notifo-local squidex/notifo:${{ env.GITHUB_REF_SLUG }}
          docker tag notifo-local squidex/notifo:${{ steps.version.outputs._0 }}
    
      - name: Publish - Push Tags
        if: env.STABLE_VERSION != 'true'
        run: |
          docker tag notifo-local squidex/notifo:${{ env.GITHUB_REF_SLUG }}

      - name: Release - Make directories
        run: sudo mkdir /build /release

      - name: Release - Create container
        run: docker create --name notifo-container notifo-local

      - name: Release - Get binaries
        run: sudo docker cp notifo-container:/app/. /build

      - name: Release - Zip Binaries
        run: sudo zip -r /release/binaries.zip .
        working-directory: /build

      - name: Release - Get Changelog Entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2
        with:
          version: ${{ env.GITHUB_REF_SLUG }}
          path: ./CHANGELOG.md

      - name: Release - Publish Binaries
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifactErrorsFailBuild: true
          artifacts: "/release/binaries.zip"
          body: ${{ steps.changelog_reader.outputs.changes }}
          name: ${{ env.GITHUB_REF_SLUG }}
          replacesArtifacts: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Release - Cleanup Binaries
        if: always()
        run: docker rm notifo-container
