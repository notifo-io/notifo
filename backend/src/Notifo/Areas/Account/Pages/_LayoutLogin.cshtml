@inject IHtmlLocalizer<AppResources> T

@{
    var gallerySteps = 7;
var galleryEnabled = false;
}

<!DOCTYPE html>
<html>
<head>
    <base href="/">

    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>@ViewBag.Title - Notifo</title>

    <link rel="stylesheet" href="@Url.Content("~/app.css")" asp-append-version="true" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;0,800;1,300;1,400;1,600;1,700;1,800&display=swap">

    @if (IsSectionDefined("header"))
    {
        @await RenderSectionAsync("header")
    }

    <environment include="Development">
        <script type="text/javascript" src="@Url.Content("~/app.js")"></script>
    </environment>    
</head>
<body>
    <div class="login-left">
        <img class="logo" alt="Notifo" src="@Url.Content("~/logo.svg")" />

        <div class="login-left-inner">
            @RenderBody()
        </div>
    </div>
    <div class="login-right">
        <div class="login-right-circle1"></div>
        <div class="login-right-circle2"></div>

        <div class="login-right-content">
            @if (galleryEnabled)
            {
                <div class="gallery">
                    <div class="gallery-images">
                        @for (var i = 1; i <= gallerySteps; i++)
                        {
                            var activeClass = i == 1 ? "active" : string.Empty;

                            <img class="gallery-image @activeClass" src="~/gallery/step_@(i).png" />
                        }
                    </div>

                    <div class="gallery-labels">
                        @for (var i = 1; i <= gallerySteps; i++)
                        {
                            var activeClass = i == 1 ? "active" : string.Empty;

                            <div class="gallery-label @activeClass">@T[$"Gallery{i}"]</div>
                        }
                    </div>

                    <div class="gallery-steps">
                        @for (var i = 1; i <= gallerySteps; i++)
                        {
                            var activeClass = i == 1 ? "active" : string.Empty;

                            <div class="gallery-step @activeClass"></div>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
    
    @if (galleryEnabled)
    {
        <script type="text/javascript">
            var stepImages = document.getElementsByClassName('gallery-image');
            var stepLabels = document.getElementsByClassName('gallery-label');
            var stepLinks = document.getElementsByClassName('gallery-step');
            var step = 0;
            var timer;

            function setStep(index) {
                clearInterval(timer);

                timer = setInterval(function () {
                    goNext();
                }, 10000);

                for (var i = 0; i < stepImages.length; i++) {
                    var stepImage = stepImages[i];
                    var stepLabel = stepLabels[i];
                    var stepLink = stepLinks[i];

                    stepImage.classList.remove('active');
                    stepLabel.classList.remove('active');
                    stepLink.classList.remove('active');

                    if (i + 1 === index) {
                        stepImage.classList.add('active');
                        stepLabel.classList.add('active');
                        stepLink.classList.add('active');
                    }
                }

                step = index;
            }

            function goPrev() {
                if (step === 1) {
                    setStep(7);
                } else {
                    setStep(step - 1);
                }
            }

            function goNext() {
                if (step === 7) {
                    setStep(1);
                } else {
                    setStep(step + 1);
                }
            }

            function subscribe(element, index) {
                element.addEventListener('click', function () {
                    setStep(index);
                });
            }

            for (var i = 0; i < stepLinks.length; i++) {
                subscribe(stepLinks[i], i + 1);
            }

            setStep(1);
        </script>
    }
</body>
</html>