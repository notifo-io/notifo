@page
@using Microsoft.AspNetCore.Mvc.ModelBinding
@inject IHtmlLocalizer<AppResources> T
@model LoginModel

@{
    ViewData["Title"] = T["LoginTitle"];

    Layout = "_LayoutLogin";

    var loginWithText = Model.Signup ? "SignupWith" : "LoginWith";
    var loginNormalText = Model.Signup ? "Signup" : "Login";
}

@if (!string.IsNullOrWhiteSpace(Model.ErrorMessage))
{
    <div class="alert alert-danger">
        @Model.ErrorMessage
    </div>
}

<div class="text-center mb-6">
    <div class="btn-group">
        @if (Model.Signup)
        {
            <a class="btn btn-toggle" asp-page="Login" asp-route-returnurl="@Model.ReturnUrl">@T["Login"]</a>
        }
        else
        {
            <a class="btn btn-toggle btn-primary">@T["Login"]</a>
        }

        @if (!Model.Signup)
        {
            <a class="btn btn-toggle" asp-page="Login" asp-route-returnurl="@Model.ReturnUrl" asp-route-signup="true">@T["Signup"]</a>
        }
        else
        {
            <a class="btn btn-toggle btn-primary">@T["Signup"]</a>
        }
    </div>
</div>

<div>
    @if (Model.HasPasswordAuth)
    {
        if (Model.Signup)
        {
            <div class="text-muted mt-5">
                <small>@T["NoAccount"]</small>
            </div>
        }
        else
        {
            <section>
                <form method="post">
                    @if (Model.LoginEmailForm.IsActive)
                    {
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>
                    }

                    <div class="form-group">
                        <label asp-for="LoginEmailForm.Email">@T["EmailLabel"]</label>

                        <div error-for="LoginEmailForm.Email"></div>
                        <input asp-for="LoginEmailForm.Email" class="form-control" />
                    </div>

                    <div class="form-group">
                        <label asp-for="LoginEmailForm.Password">@T["PasswordLabel"]</label>

                        <div error-for="LoginEmailForm.Password"></div>
                        <input asp-for="LoginEmailForm.Password" type="password" class="form-control" />
                    </div>

                    <div class="form-group">
                        <div class="custom-control custom-checkbox">
                            <input asp-for="LoginEmailForm.RememberMe" type="checkbox" class="custom-control-input">
                            <label asp-for="LoginEmailForm.RememberMe" class="custom-control-label">@T["RememberMe"]</label>
                        </div>
                    </div>

                    <div class="form-group">
                        <button type="submit" class="btn btn-block btn-primary">@T[loginNormalText]</button>
                    </div>
                </form>
            </section>
        }
    }

    @if (Model.ExternalLogins?.Count > 0)
    {
        <div class="login-separator">
            <span>@T["AuthSeparator"]</span>
        </div>

        <section>
            <form asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                <div>
                    <p>
                        @foreach (var provider in Model.ExternalLogins)
                        {
                            var lowerName = provider.DisplayName!.ToLowerInvariant();

                            <button type="submit" class="btn btn-block btn-social btn-dark btn-@lowerName" name="provider" value="@provider.Name">
                                @T[loginWithText, provider.DisplayName]
                            </button>
                        }
                    </p>
                </div>
            </form>
        </section>
    }

    @if (Model.HasDynamicAuthScheme)
    {
        <div class="login-separator">
            <span>@T["AuthSeparator"]</span>
        </div>

        <section>
            <form asp-page-handler="Dynamic" method="post">
                @if (Model.LoginDynamicForm.IsActive)
                {
                    <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>
                }

                <div class="alert alert-form alert-form-bordered mb-4 pl-4">
                    @T["LoginCustom"]
                </div>

                <div class="form-group">
                    <label asp-for="LoginDynamicForm.Email">@T["EmailLabel"]</label>

                    <div error-for="LoginDynamicForm.Email"></div>
                    <input asp-for="LoginDynamicForm.Email" class="form-control" />
                </div>

                <div class="form-group">
                    <button type="submit" class="btn btn-block btn-primary">@T[loginNormalText]</button>
                </div>
            </form>
        </section>
    }
</div>