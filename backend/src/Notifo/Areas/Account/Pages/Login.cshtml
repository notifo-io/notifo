@page
@inject IHtmlLocalizer<AppResources> T
@model LoginModel

@{
    ViewData["Title"] = T["LoginTitle"];

    void RenderValidation(string field)
    {
        @if (ViewContext.ViewData.ModelState[field]?.ValidationState == Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Invalid)
        {
            <div class="errors-container">
                <span class="errors">@Html.ValidationMessage(field)</span>
            </div>
        }
    }
}

@if (!string.IsNullOrWhiteSpace(Model!.ErrorMessage))
{
    <div class="alert alert-danger">
        @Model!.ErrorMessage
    </div>
}

@if (Model!.HasPasswordAuth)
{
    <section>
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

            <div class="form-group">
                <label asp-for="Model.Email">@T["EmailLabel"]</label>

                @{ RenderValidation("Model.Email"); }

                <input asp-for="Model.Email" class="form-control" />
            </div>

            <div class="form-group">
                <label asp-for="Model.Password">@T["PasswordLabel"]</label>

                @{ RenderValidation("Model.Password"); }

                <input asp-for="Model.Password" type="password" class="form-control" />
            </div>

            <div class="form-group">
                <div class="custom-control custom-checkbox">
                    <input asp-for="Model.RememberMe" type="checkbox" class="custom-control-input">
                    <label asp-for="Model.RememberMe" class="custom-control-label">@T["RememberMe"]</label>
                </div>
            </div>

            <div class="form-group">
                <button type="submit" class="btn btn-block btn-primary">@T["LoginButton"]</button>
            </div>
        </form>
    </section>
}

@if (Model!.HasPasswordAuth && Model?.ExternalLogins?.Count > 0)
{
    <div class="login-separator">
        <span>@T["ExternalSeperator"]</span>
    </div>
}

@if (Model?.ExternalLogins?.Count > 0)
{
    <section>
        <form asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
            <div>
                <p>
                    @foreach (var provider in Model.ExternalLogins)
                    {
                        var lowerName = provider.DisplayName!.ToLowerInvariant();

                        <button type="submit" class="btn btn-block btn-social btn-dark btn-@lowerName" name="provider" value="@provider.Name">
                            @T[$"LoginWith{provider.DisplayName}"]
                        </button>
                    }
                </p>
            </div>
        </form>
    </section>
}
